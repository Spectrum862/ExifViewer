/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package metadata;

import com.drew.imaging.ImageProcessingException;
import com.drew.metadata.MetadataException;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;

/**
 *
 * @author Spectrum
 */
public class UI extends javax.swing.JFrame {
    /**
     * Creates new form UI
     */
    ImageIcon preview,bufferpreview; 
    JFileChooser fc;
    Photo image;
    int bnv=0,ctv=0,rsv=55;
    public UI() {
        initComponents();
        fc = new JFileChooser();
    }
    
    private ImageIcon createPreview(ImageIcon pic,int w, int h){
        Image image = pic.getImage();
        ImageIcon buffim;
        double ratio,buff;
        int neww,newh;
        if(pic.getIconHeight() > pic.getIconWidth()){
            buff = h;
            ratio = buff/pic.getIconHeight();
            newh = (int) (pic.getIconHeight()*ratio);
            buff = pic.getIconHeight();
            ratio = (pic.getIconWidth()/buff);
            neww = (int) (newh*ratio);
        }
        else{
            buff = w;
            ratio = buff/pic.getIconWidth();
            neww = (int) (pic.getIconWidth()*ratio);
            buff = pic.getIconWidth();
            ratio = (pic.getIconHeight()/buff);
            newh = (int) (neww*ratio);
        }
    Image newimg = image.getScaledInstance(neww, newh,  java.awt.Image.SCALE_SMOOTH);
    return buffim = new ImageIcon(newimg); 
    }
    
    private ImageIcon previewScreen(){
        preview = bufferpreview;
        preview = PhotoEditor.brightness(preview, bnv);
        preview = PhotoEditor.contrast(preview, ctv);
        return preview;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        CTV = new javax.swing.JLabel();
        BNV = new javax.swing.JLabel();
        RSV = new javax.swing.JLabel();
        btext = new javax.swing.JLabel();
        ctext = new javax.swing.JLabel();
        retext = new javax.swing.JLabel();
        conslider = new javax.swing.JSlider();
        brightslider = new javax.swing.JSlider();
        sizeslider = new javax.swing.JSlider();
        button = new javax.swing.JButton();
        pic = new javax.swing.JLabel();
        iso = new javax.swing.JLabel();
        lens = new javax.swing.JLabel();
        filesize = new javax.swing.JLabel();
        res = new javax.swing.JLabel();
        author = new javax.swing.JLabel();
        mm = new javax.swing.JLabel();
        f = new javax.swing.JLabel();
        ss = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        cmo = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SPOTLIGHT");
        setBackground(new java.awt.Color(34, 34, 34));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/metadata/savebutton.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 115, 30, 30));

        CTV.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        CTV.setForeground(new java.awt.Color(255, 255, 255));
        CTV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CTV.setText("0");
        getContentPane().add(CTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 40, 30));

        BNV.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        BNV.setForeground(new java.awt.Color(255, 255, 255));
        BNV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BNV.setText("0");
        getContentPane().add(BNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 40, -1));

        RSV.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        RSV.setForeground(new java.awt.Color(255, 255, 255));
        RSV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RSV.setText("55");
        getContentPane().add(RSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 40, 30));

        btext.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        btext.setForeground(new java.awt.Color(255, 255, 255));
        btext.setText("Brightness");
        getContentPane().add(btext, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 220, 30));

        ctext.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        ctext.setForeground(new java.awt.Color(255, 255, 255));
        ctext.setText("Resize");
        getContentPane().add(ctext, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 220, 30));

        retext.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        retext.setForeground(new java.awt.Color(255, 255, 255));
        retext.setText("Contrast");
        getContentPane().add(retext, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 220, 30));

        conslider.setMaximum(128);
        conslider.setMinimum(-127);
        conslider.setValue(0);
        conslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                consliderStateChanged(evt);
            }
        });
        getContentPane().add(conslider, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 270, -1));

        brightslider.setMinimum(-100);
        brightslider.setValue(0);
        brightslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                brightsliderStateChanged(evt);
            }
        });
        getContentPane().add(brightslider, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 270, -1));

        sizeslider.setMinimum(10);
        sizeslider.setValue(55);
        sizeslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sizesliderStateChanged(evt);
            }
        });
        getContentPane().add(sizeslider, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 270, -1));

        button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/metadata/button.png"))); // NOI18N
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        getContentPane().add(button, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 40, 30));

        pic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(pic, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 940, 650));

        iso.setFont(new java.awt.Font("Nexa Light", 0, 12)); // NOI18N
        iso.setForeground(new java.awt.Color(255, 255, 255));
        iso.setText("ISO");
        getContentPane().add(iso, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 640, 220, 30));

        lens.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        lens.setForeground(new java.awt.Color(255, 255, 255));
        lens.setText("Lens");
        getContentPane().add(lens, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 600, 220, 30));

        filesize.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        filesize.setForeground(new java.awt.Color(255, 255, 255));
        filesize.setText("Filesize");
        getContentPane().add(filesize, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 620, 140, 30));

        res.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        res.setForeground(new java.awt.Color(255, 255, 255));
        res.setText("Resolution");
        getContentPane().add(res, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 620, 120, 30));

        author.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        author.setForeground(new java.awt.Color(255, 255, 255));
        author.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        author.setText("Artist");
        getContentPane().add(author, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 663, 260, 30));

        mm.setFont(new java.awt.Font("Nexa Light", 0, 12)); // NOI18N
        mm.setForeground(new java.awt.Color(255, 255, 255));
        mm.setText("Focal R.");
        getContentPane().add(mm, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 640, 200, 30));

        f.setFont(new java.awt.Font("Nexa Light", 0, 12)); // NOI18N
        f.setForeground(new java.awt.Color(255, 255, 255));
        f.setText("f/");
        getContentPane().add(f, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 640, 200, 30));

        ss.setFont(new java.awt.Font("Nexa Light", 0, 12)); // NOI18N
        ss.setForeground(new java.awt.Color(255, 255, 255));
        ss.setText("Shutter");
        getContentPane().add(ss, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 640, 200, 30));

        name.setFont(new java.awt.Font("Nexa Light", 0, 12)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setText("Filename");
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 546, 220, 30));

        date.setFont(new java.awt.Font("Nexa Light", 0, 12)); // NOI18N
        date.setForeground(new java.awt.Color(255, 255, 255));
        date.setText("Date taken");
        getContentPane().add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 558, 220, 30));

        type.setBackground(new java.awt.Color(0, 255, 102));
        type.setFont(new java.awt.Font("Nexa Bold", 1, 17)); // NOI18N
        type.setForeground(new java.awt.Color(34, 34, 34));
        type.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        type.setText("TYPE");
        getContentPane().add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, 50, 30));

        cmo.setFont(new java.awt.Font("Nexa Light", 0, 17)); // NOI18N
        cmo.setForeground(new java.awt.Color(255, 255, 255));
        cmo.setText("Camera");
        getContentPane().add(cmo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 581, 220, 30));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/metadata/Full.jpg"))); // NOI18N
        bg.setToolTipText("");
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        jButton1.setText("jButton1");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 240, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        
        int result = fc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
     
            try {
                image = PhotoJpeg.getInstance(file.getAbsolutePath());
                bufferpreview = new ImageIcon(file.getAbsolutePath());
                bufferpreview = this.createPreview(bufferpreview, 940, 650);
            } catch (ImageProcessingException | IOException | MetadataException ex) {
                Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        
            
            cmo.setText(image.getExif("camera"));
            lens.setText(image.getExif("lens"));
            type.setText(image.getExif("filetype"));
            ss.setText(image.getExif("shutterspeed"));
            res.setText(String.valueOf(image.getHeight()) + " x " + image.getWidth());
            iso.setText("ISO "+ image.getExif("iso"));
            mm.setText(image.getExif("focalrange"));
            f.setText(image.getExif("aperture"));
            filesize.setText(image.getExif("filesize"));           
            date.setText(image.getExif("date"));
            author.setText(image.getExif("artist"));
            name.setText(image.getExif("filename"));
            pic.setIcon(bufferpreview);
            
            
            
        }
        
    }//GEN-LAST:event_buttonActionPerformed

    private void brightsliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_brightsliderStateChanged
        bnv = brightslider.getValue();
        BNV.setText(Integer.toString(bnv));
        pic.setIcon(this.previewScreen());
    }//GEN-LAST:event_brightsliderStateChanged

    private void consliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_consliderStateChanged
        ctv = conslider.getValue();
        CTV.setText(Integer.toString(ctv));
        pic.setIcon(this.previewScreen());
    }//GEN-LAST:event_consliderStateChanged

    private void sizesliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sizesliderStateChanged
        rsv = sizeslider.getValue();
        RSV.setText(Integer.toString(rsv));
        
    }//GEN-LAST:event_sizesliderStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ImageIcon buffer;         
        buffer = PhotoEditor.reSize(image.getPic(),rsv);
        buffer = PhotoEditor.brightness(buffer, bnv);
        buffer = PhotoEditor.contrast(buffer, ctv);
        try {
            PhotoIO.savePhoto(buffer,image.getExif("filename"));
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BNV;
    private javax.swing.JLabel CTV;
    private javax.swing.JLabel RSV;
    private javax.swing.JLabel author;
    private javax.swing.JLabel bg;
    private javax.swing.JSlider brightslider;
    private javax.swing.JLabel btext;
    private javax.swing.JButton button;
    private javax.swing.JLabel cmo;
    private javax.swing.JSlider conslider;
    private javax.swing.JLabel ctext;
    private javax.swing.JLabel date;
    private javax.swing.JLabel f;
    private javax.swing.JLabel filesize;
    private javax.swing.JLabel iso;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel lens;
    private javax.swing.JLabel mm;
    private javax.swing.JLabel name;
    private javax.swing.JLabel pic;
    private javax.swing.JLabel res;
    private javax.swing.JLabel retext;
    private javax.swing.JSlider sizeslider;
    private javax.swing.JLabel ss;
    private javax.swing.JLabel type;
    // End of variables declaration//GEN-END:variables


}
